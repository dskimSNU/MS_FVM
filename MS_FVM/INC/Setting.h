#pragma once
#define PHYSICAL_DOMAIN_DIMENSION		2
#define GRID_FILE_TYPE					Gmsh
#define GRID_FILE_NAME					"Quad10"
#define GOVERNING_EQUATION_NAME			Linear_Advection
#define INITIAL_CONDITION_NAME			Sine_Wave
#define SPATIAL_DISCRETE_METHOD			FVM
#define RECONSTRUCTION_METHOD			MLP_u1<Least_Square>
#define NUMERICAL_FLUX_NAME				LLF
#define TIME_INTEGRAL_METHOD			SSPRK33
#define TIME_STEP_METHOD_NAME			CFL
#define TIME_STEP_CONSTANT				0.9
#define END_CONDITION_NAME				Time
#define	END_CONDITION_CONSTANT			2.0
#define POST_CONDITION_NAME				Time
#define POST_CONDITION_CONSTANT			3.0


//availiable list

//PHYSICAL_DOMAIN_DIMENSION			2
//GRID_FILE_TYPE					Gmsh
//GRID_FILE_NAME					-
//GOVERNING_EQUATION_NAME			Linear_Advection, Burgers
//INITIAL_CONDITION_NAME			Sine_Wave
//SPATIAL_DISCRETE_METHOD			FVM, FVM_Limiter
//NUMERICAL_FLUX_NAME				LLF
//TIME_STEP_METHOD_NAME				CFL, ConstDt
//TIME_STEP_CONSTNAT				-
//TIME_INTGRAL_METHOD				SSPRK33
//END_CONDITION_NAME				Time
//END_CONDITION_CONSTANT			-
//POST_CONDITION_NAME				Time
//POST_CONDITION_CONSTANT			-



//FORMAT SETTER
#define FORMAT1(x,y) x ## _ ## y ## D
#define SET_FORMAT1(x,y) FORMAT1(x,y) 
#define FORMAT2(x,y) x ## _ ## y 
#define SET_FORMAT2(x,y) FORMAT2(x,y)

//USING MACRO
//FORMAT1(X,Y) := X_YD
#define GOVERNING_EQUATION		SET_FORMAT1(GOVERNING_EQUATION_NAME	, PHYSICAL_DOMAIN_DIMENSION)
#define INITIAL_CONDITION		SET_FORMAT1(INITIAL_CONDITION_NAME	, PHYSICAL_DOMAIN_DIMENSION)

//FORAMT2(X,Y) := X_Y
#define SOLVE_END_CONDITION		SET_FORMAT2(End_By					, END_CONDITION_NAME)<END_CONDITION_CONSTANT>		
#define SOLVE_POST_CONDITION	SET_FORMAT2(Post_By					, POST_CONDITION_NAME)<POST_CONDITION_CONSTANT>		

#define NUMERICAL_FLUX			NUMERICAL_FLUX_NAME<GOVERNING_EQUATION>
#define TIME_STEP_METHOD		TIME_STEP_METHOD_NAME<TIME_STEP_CONSTANT>
	